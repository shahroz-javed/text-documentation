//Array.form not on proptype

from: return array object from object 
with a length property or an iterable object
from: turn array like/ish to array   like  string,nodeList,Set



//string to array
console.log(Array.from(str));
console.log(Array.from(text[0].innerHTML));



//nodelist to array
const text = document.querySelectorAll('.text');
const newtext = Array.from(text)
const newtext = Array.from(text).find((item) => item.textContent === 'BSSE' );




//pagination example
-- when passing obj length property is necessary
-- _ in callback ignore first item
const items = Array.from({
                length: 120,
            },
            (_, index) => {
                return index;
            }
        );
const itemsPerPage = 10;
const pages = Math.ceil(items.length / itemsPerPage);
const newItems = Array.from({
                length: pages,
            },
            (_, index) => {
                const start = index * itemsPerPage;
                const temItems = items.slice(start, start + itemsPerPage);
                return temItems;
            }
        );