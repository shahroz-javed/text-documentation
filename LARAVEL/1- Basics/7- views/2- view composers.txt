//view composer share data on view call
View::composer('profile', ProfileComposer::class);

// Using closure based composers...
 View::composer('dashboard', function ($view) {
             });

View::composer(
    ['profile', 'dashboard'],
    MultiComposer::class
);

View::composer('*', function ($view) {
    //
});



//class example
<?php

namespace App\Http\View\Composers;

use App\Repositories\UserRepository;
use Illuminate\View\View;

class ProfileComposer
{
    protected $users;

// Create a new profile composer.
    
    public function __construct(UserRepository $users)
    {
        // Dependencies are automatically resolved by the service container...
        $this->users = $users;
    }

    
// Bind data to the view.     

    public function compose(View $view)
    {
        $view->with('count', $this->users->count());
    }
}