$users = User::factory()->make();
$users = User::factory()->count(3)->make();

//applying states
$users = User::factory()->count(5)->suspended()->make();


//over ridding attributes
$user = User::factory()->make([
    'name' => 'Abigail Otwell',
]);
or
$user = User::factory()->state([
    'name' => 'Abigail Otwell',
])->make();


//saving models
$user = User::factory()->create();
$users = User::factory()->count(3)->create();
$user = User::factory()->create([
    'name' => 'Abigail',
]);





//sequences
$users = User::factory()
                ->count(10)
                ->state(new Sequence(
                    fn ($sequence) => ['role' => UserRoles::all()->random()],
                ))
                ->create();

new Sequence(['admin' => 'Y'],['admin' => 'N'],)

//accessible inside suquence closure
$sequence->index
$sequence->count